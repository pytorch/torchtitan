# TorchTrain Config.toml
[job]
dump_folder = "./outputs"
description = "LLaMA debug training"
use_for_integration_test = true

[profiling]
run_profiler = true
save_traces_folder = "profiling/traces"
# profiling frequency - example: 10 means every 10th iter will be profiled
profile_every_x_iter = 10

[metrics]
log_freq = 1
enable_tensorboard = true
save_tb_folder = "tb"

[model]
name = "llama"
flavor = "debugmodel"
norm_type = "fused_rmsnorm" # layernorm / np_layernorm / rmsnorm / fused_rmsnorm
tokenizer_path = "./torchtrain/datasets/tokenizer/tokenizer.model"

[optimizer]
name = "AdamW"
lr = 8e-4

[training]
batch_size = 8
seq_len = 2048
warmup_steps = 2  # lr scheduler warm up, normally 20% of the train steps
max_norm = 1.0  # grad norm clipping
steps = 10
data_parallel_degree = -1
tensor_parallel_degree = 1
pipeline_parallel_degree = 1
fp8_linear = ""
compile = false
dataset = "alpaca"   # supported datasets = alpaca (52K), minipile (1M), c4 (177M)

[checkpoint]
interval = 10
interval_type = "steps"
folder = "ckpt"

[activation_checkpoint]
mode = 'selective'  # ['none', 'full', 'selective']
selective_ac_option = '2'  # 'int' = ac every positive int layer or 'op', ac based on ops policy
