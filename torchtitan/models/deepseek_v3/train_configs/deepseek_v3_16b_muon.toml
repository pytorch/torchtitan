# torchtitan Config.toml

[job]
dump_folder = "./outputs"
description = "DeepSeek-V3 16B model training with Muon optimizer"
print_args = false

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 10
enable_memory_snapshot = false
save_memory_snapshot_folder = "memory_snapshot"

[metrics]
log_freq = 1
disable_color_printing = false
enable_tensorboard = false
save_tb_folder = "tb"
enable_wandb = true

[model]
name = "deepseek_v3"
flavor = "16B"
tokenizer_path = "./assets/tokenizer/deepseek-moe-16b-chat"
# converters = ["float8"]


[optimizer]
name = "Muon"
lr = 2e-2
weight_decay = 0.1
beta1 = 0.9
beta2 = 0.95
eps = 1e-8

# Muon-specific parameters
mu = 0.95                       # Momentum factor for Muon
algorithm = "muon"              # Main algorithm to use for 2D matrices
nesterov = false                # Whether to use Nesterov momentum
adjust_lr = "spectral_norm"     # How to adjust LR: "spectral_norm", "rms_norm", or null
flatten = false                 # Whether to flatten 3D+ tensors to 2D (should only be used for convolution layers)
use_triton = true               # Whether to use Triton kernel for Newton-Schulz

# Parameter-specific optimizer selection
scalar_optimizer = "lion"        # For 1D parameters (biases, layer norms)
embedding_optimizer = "lion"     # For embedding layers
head_optimizer = "lion"          # For model head/output layers
routing_optimizer = "lion"       # For routing layers (DeepSeek MoE)
head_lr_scaling = true           # Apply 1/sqrt(dim) scaling to head layers
# expert_optimizer = "adamw"     # Comment out to let experts use default classification (Muon for 2D matrices)

# Learning rate scaling factors
scalar_lr_factor = 1.0            # LR multiplier for scalar parameters
embedding_lr_factor = 1.0         # LR multiplier for embedding parameters
head_lr_factor = 1.0              # LR multiplier for head parameters (after head_lr_scaling)
routing_lr_factor = 1.0           # LR multiplier for routing parameters

[lr_scheduler]
warmup_steps = 10  # lr scheduler warm up (very few steps needed for Muon)
decay_ratio = 0.45  # lr scheduler decay ratio
decay_type = "linear"
min_lr_factor = 0.0

[training]
seed = 2025
local_batch_size = 18
global_batch_size = 576  # gradient_accumulation_steps = 4 with dp_degree = 8 (576 / (18 * 8) = 4)
seq_len = 4096
max_norm = 1.0  # grad norm clipping
steps = 1000
compile = false
dataset = "c4"  # supported datasets: c4_test (2K), c4 (177M)


[parallelism]
data_parallel_replicate_degree = 1
data_parallel_shard_degree = -1
fsdp_reshard_after_forward = "default" # default / never / always
tensor_parallel_degree = 1
enable_async_tensor_parallel = false
expert_parallel_degree = 1
pipeline_parallel_degree = 1
pipeline_parallel_schedule = "Interleaved1F1B"

[checkpoint]
enable_checkpoint = false
folder = "checkpoint"
interval = 10
last_save_model_only = true
export_dtype = "float32"
async_mode = "disabled"  # ["disabled", "async", "async_with_pinned_mem]"

[activation_checkpoint]
mode = "full"  # ["none", "selective", "full"]

[float8]
enable_fsdp_float8_all_gather = false
precompute_float8_dynamic_scale_for_fsdp = false
filter_fqns = ["output", "router.gate"]
moe_fqns = ["experts"]
